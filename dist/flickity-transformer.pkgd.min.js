var FlickityTransformer=function(){"use strict";function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var index=createCommonjsModule(function(module){var config={};function scale(value){var domains=config.domain;var ranges=config.range;var rangeMin;var rangeMax;var domain;var range;var ratio;var result;var i=0;while(i<domains.length-1){if(value>=domains[i]&&value<=domains[i+1]){domain=[domains[i],domains[i+1]],range=[ranges[i],ranges[i+1]];break}i++}if(domain===undefined){if(value<domains[0]){domain=[domains[0],domains[1]];range=[ranges[0],ranges[1]]}else{domain=[domains[domains.length-2],domains[domains.length-1]];range=[ranges[ranges.length-2],ranges[ranges.length-1]]}}ratio=(range[1]-range[0])/(domain[1]-domain[0]);result=range[0]+ratio*(value-domain[0]);if(config.clamp){rangeMin=Math.min(range[0],range[1]);rangeMax=Math.max(range[0],range[1]);result=Math.min(rangeMax,Math.max(rangeMin,result))}return result}function polylinearScale(domain,range,clamp){domain=domain||[0,1];range=range||[0,1];clamp=clamp||false;if(domain.length!==range.length){throw new Error("polylinearScale requires domain and range to have an equivalent number of values")}config.domain=domain;config.range=range;config.clamp=clamp;return scale}module.exports=polylinearScale});var asyncGenerator=function(){function AwaitValue(value){this.value=value}function AsyncGenerator(gen){var front,back;function send(key,arg){return new Promise(function(resolve,reject){var request={key:key,arg:arg,resolve:resolve,reject:reject,next:null};if(back){back=back.next=request}else{front=back=request;resume(key,arg)}})}function resume(key,arg){try{var result=gen[key](arg);var value=result.value;if(value instanceof AwaitValue){Promise.resolve(value.value).then(function(arg){resume("next",arg)},function(arg){resume("throw",arg)})}else{settle(result.done?"return":"normal",result.value)}}catch(err){settle("throw",err)}}function settle(type,value){switch(type){case"return":front.resolve({value:value,done:true});break;case"throw":front.reject(value);break;default:front.resolve({value:value,done:false});break}front=front.next;if(front){resume(front.key,front.arg)}else{back=null}}this._invoke=send;if(typeof gen.return!=="function"){this.return=undefined}}if(typeof Symbol==="function"&&Symbol.asyncIterator){AsyncGenerator.prototype[Symbol.asyncIterator]=function(){return this}}AsyncGenerator.prototype.next=function(arg){return this._invoke("next",arg)};AsyncGenerator.prototype.throw=function(arg){return this._invoke("throw",arg)};AsyncGenerator.prototype.return=function(arg){return this._invoke("return",arg)};return{wrap:function(fn){return function(){return new AsyncGenerator(fn.apply(this,arguments))}},await:function(value){return new AwaitValue(value)}}}();var classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}};var createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var name="FlickityTransformer";var units={perspective:"px",rotate:"deg",rotateX:"deg",rotateY:"deg",rotateZ:"deg",skew:"deg",skewX:"deg",skewY:"deg",translateX:"px",translateY:"px",translateZ:"px"};var FlickityTransformer=function(){function FlickityTransformer(flickity,transforms){classCallCheck(this,FlickityTransformer);this.flickity=flickity;this.transforms=transforms;this.cellElements=flickity.getCellElements();this.init()}createClass(FlickityTransformer,[{key:"init",value:function init(){var _this=this;this.createScaleFunctions();this.flickity.slides.forEach(this.applyTransforms.bind(this));this.flickity.on("scroll",function(){_this.flickity.slides.forEach(_this.applyTransforms.bind(_this))});if(this.flickity._events.scroll===undefined){throw new Error(name+" requires the first parameter to be a instance of Flickity that supports the `scroll` event (version 2+)")}window.addEventListener("resize",function(){_this.flickity.slides.forEach(_this.applyTransforms.bind(_this))})}},{key:"createScaleFunctions",value:function createScaleFunctions(){this.transforms.forEach(function(transform){var domain=[];var range=[];transform.stops.forEach(function(stop){domain.push(stop[0]);range.push(stop[1])});transform.scale=function(value){return index(domain,range,true)(value)}})}},{key:"applyTransforms",value:function applyTransforms(slide,i){var _this2=this;var el=this.cellElements[i];var txs=[];var xPos=void 0;xPos=slide.parent.x<0?slide.target-Math.abs(slide.parent.x):slide.target+slide.parent.x;this.transforms.forEach(function(transform){txs.push(_this2.makeTransform(transform,xPos))});el.style.transform=txs.join(" ")}},{key:"makeTransform",value:function makeTransform(transform,xPos){var name=transform.name;var unit=transform.unit||units[name]||"";var tx=transform.scale(xPos);return name+"("+tx+unit+")"}}]);return FlickityTransformer}();return FlickityTransformer}();